/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 redCar.glb -t 
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Generic_Old_Car_1: THREE.Mesh
    Generic_Old_Car_2: THREE.Mesh
    Generic_Old_Car_3: THREE.Mesh
    Generic_Old_Car_4: THREE.Mesh
    Generic_Old_Car_5: THREE.Mesh
    Generic_Old_Car_6: THREE.Mesh
    Generic_Old_Car_7: THREE.Mesh
    Generic_Old_Car_8: THREE.Mesh
    Generic_Old_Car_9: THREE.Mesh
    Generic_Old_Car_10: THREE.Mesh
    Generic_Old_Car_11: THREE.Mesh
    Generic_Old_Car_12: THREE.Mesh
    Generic_Old_Car_13: THREE.Mesh
    Generic_Old_Car_14: THREE.Mesh
    Generic_Old_Car_15: THREE.Mesh
    Generic_Old_Car_16: THREE.Mesh
  }
  materials: {
    headlight: THREE.MeshPhysicalMaterial
    gray: THREE.MeshPhysicalMaterial
    Mat_28: THREE.MeshPhysicalMaterial
    Gauge: THREE.MeshPhysicalMaterial
    orange_light_: THREE.MeshPhysicalMaterial
    redlight: THREE.MeshPhysicalMaterial
    white_light: THREE.MeshPhysicalMaterial
    body: THREE.MeshPhysicalMaterial
    dgray: THREE.MeshPhysicalMaterial
    skin: THREE.MeshPhysicalMaterial
    tire: THREE.MeshPhysicalMaterial
    chrome: THREE.MeshPhysicalMaterial
    silver: THREE.MeshPhysicalMaterial
    black: THREE.MeshPhysicalMaterial
    glass: THREE.MeshPhysicalMaterial
    plate: THREE.MeshPhysicalMaterial
  }
  animations: any
}

export function PlaneCar(props: any) {
  const { nodes, materials } = useGLTF('/redCar.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Generic_Old_Car_1.geometry} material={materials.headlight} />
        <mesh geometry={nodes.Generic_Old_Car_2.geometry} material={materials.gray} />
        <mesh geometry={nodes.Generic_Old_Car_3.geometry} material={materials.Mat_28} />
        <mesh geometry={nodes.Generic_Old_Car_4.geometry} material={materials.Gauge} />
        <mesh geometry={nodes.Generic_Old_Car_5.geometry} material={materials.orange_light_} />
        <mesh geometry={nodes.Generic_Old_Car_6.geometry} material={materials.redlight} />
        <mesh geometry={nodes.Generic_Old_Car_7.geometry} material={materials.white_light} />
        <mesh geometry={nodes.Generic_Old_Car_8.geometry} material={materials.body} />
        <mesh geometry={nodes.Generic_Old_Car_9.geometry} material={materials.dgray} />
        <mesh geometry={nodes.Generic_Old_Car_10.geometry} material={materials.skin} />
        <mesh geometry={nodes.Generic_Old_Car_11.geometry} material={materials.tire} />
        <mesh geometry={nodes.Generic_Old_Car_12.geometry} material={materials.chrome} />
        <mesh geometry={nodes.Generic_Old_Car_13.geometry} material={materials.silver} />
        <mesh geometry={nodes.Generic_Old_Car_14.geometry} material={materials.black} />
        <mesh geometry={nodes.Generic_Old_Car_15.geometry} material={materials.glass} />
        <mesh geometry={nodes.Generic_Old_Car_16.geometry} material={materials.plate} />
      </group>
    </group>
  )
}

useGLTF.preload('/redCar.glb')
